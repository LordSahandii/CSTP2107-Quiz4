import Footer from '@/components/Footer'
import Header from '@/components/Header'
import Head from 'next/head'

import styles from '@/styles/Home.module.css'

import Styles from "@/styles/AddPlants.module.sass"
import { useState } from 'react'
import axios from 'axios'
import PlantActions from '@/backend/actions/plants'
import { GetServerSideProps } from 'next'
import User from '@/interfaces/User'
import { getToken } from 'next-auth/jwt'


export default function AddPlants(props:User) {

  const [name, setName] = useState("");
  const [description, setDescription] = useState("");
  const [image,setImage] = useState("");
  const [savedName, setSavedName] = useState('');

  const handleCreateClick = async () =>{
      try {
          if (!name || name.length === 0 || name.length > 100) {
              // throw new Error('')
              throw {
                  message: 'name is invalid'
              };
          }
      } catch(error) {
          console.log('MESSAGE: ', error.message);
          return;
      }

      const body = {
          name,
          image,
          description
      };

      try {
          const { data } = await axios.post('http://localhost:3000/api/users/'+props.username, body);

          setSavedName(data.name);
      } catch(error) {
          console.log('NETWORK ERROR', error);
      }

  }
  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    const value = event.target.value;

    setName(value)
}
const handleDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {
  const value = event.target.value;

  setDescription(value)
}
const handleImageChange = (event: React.ChangeEvent<HTMLInputElement>) => {
  const value = event.target.value;

  setImage(value)
}

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header/>        
        <div >
            <h1 className={Styles.title}>Add Plants</h1>
            <div className={Styles.forms}>
                <input type="file" placeholder="Upload your image" className={Styles.upload} onChange={handleImageChange}/>
                <input type="text" placeholder="Name" className={Styles.inputs} onChange={handleNameChange}/>
                <input type="text" placeholder="Description" className={Styles.inputs} onChange={handleDescriptionChange}/>
                <button className={Styles.button} onClick={(handleCreateClick)}>Done</button>
            </div>
        </div>


      <div className={styles.foot}>
      <Footer/>
      </div>
      
      
      
    </div>
  )
}
export const getServerSideProps : GetServerSideProps = async (context)=> {
    
    try{
    const secret = process.env.NEXTAUTH_SECRET;
    const token = await getToken(
        {
            req: context.req,
            secret
        }
    );

    if (!token) {
        return {
            redirect: {
                destination: '/login',
                permanent: false
            }
        }
    }
    
    const username = context.params.username as string
    const user = await PlantActions.getAUserById(username);
    
    const userList = JSON.parse(JSON.stringify(user)) as User
    if(!userList){
        throw Error("USER NOT FOUND")
    }

    return {
        props:{
            userList     
        }
    }
    }catch(e){
        return{
            redirect: {
              destination: '/404',
              permanent: false,
            },
        }
    }
}
